#!/usr/bin/env bash

# dd-dt-run-cont-comps
#
# run Docker container composition images
#
# author  : stefan schablowski
# contact : stefan.schablowski@desmodyne.com
# created : 2019-01-24


# NOTE: see also dd-dt-build-cont-comps


echo
echo 'run Docker container composition images'
echo


# -----------------------------------------------------------------------------
# configure script parameters

# absolute path to BashLib library file
path_to_bashlib='/usr/local/lib/dd-bash-lib.sh'

# array with alphabetical list of tools called by this script
# shellcheck disable=SC2034
req_tools=('docker-compose' 'jq' 'realpath')

# array with paths to append to PATH
# shellcheck disable=SC2034
ext_paths=()


# -----------------------------------------------------------------------------
# load BashLib

# shellcheck disable=SC1090
if output="$(source "${path_to_bashlib}" 2>&1)"
then
    source "${path_to_bashlib}"
else
    echo "${output}"
    exit 1
fi


# -----------------------------------------------------------------------------
# run BashLib boilerplate functions

if ! configure_platform              ; then exit 1; fi
if ! extend_path req_tools ext_paths ; then exit 1; fi
if ! get_conf_file_arg "${@}"        ; then exit 1; fi


# -----------------------------------------------------------------------------
# load script configuration

echo

# shellcheck disable=SC2034
attrs=(compositions)
# shellcheck disable=SC2034
opt_attrs=()

echo 'Load script configuration file:'
# shellcheck disable=SC2154
if ! get_attrs_from_yaml_file "${conf_file}" attrs opt_attrs; then exit 1; fi


# -----------------------------------------------------------------------------
# run Docker container composition images

# shellcheck disable=SC2154
if ! comp_names="$(jq -r 'keys[]' <<< "${compositions}" | sort)"
then
    exit 1
fi

for comp_name in ${comp_names}
do
    echo
    echo "container composition name: ${comp_name}"

    if ! comp_conf="$(jq -r ".\"${comp_name}\"" <<< "${compositions}")"
    then
        exit 1
    fi

    if ! comp_conf_path="$(jq -r '.comp_conf_path' <<< "${comp_conf}")"
    then
        exit 1
    fi

    if ! project_name="$(  jq -r '.project_name'   <<< "${comp_conf}")"
    then
        exit 1
    fi

    if [ ! -f "${comp_conf_path}" ]
    then
        echo 'Failed to find container composition configuration file at'
        echo "  $(realpath "${comp_conf_path}")"
        exit 1
    fi

    echo

    # https://docs.docker.com/compose/reference/down
    echo "bring down ${comp_name}:"
    if ! docker-compose --file         "${comp_conf_path}" \
                        --project-name "${project_name}"   down
    then
        exit 1
    fi

    # TODO: remove exited / stopped containers to fix
    #   ERROR: for ct-nginx-proxy-le  Cannot create container for service ...:
    #   Conflict. The container name "/..." is already in use by container "...".
    #   You have to remove (or rename) that container ... to reuse that name.
    # docker-compose does not seem to provide a way to list the names of
    # containers that are part of a service - if they are not running :-(

    # TODO: use external networks and volumes ?
    # https://stackoverflow.com/q/37685581
    # https://stackoverflow.com/a/51043152
    # https://stackoverflow.com/a/45984853

    # https://docs.docker.com/compose/reference/up
    echo "bring up ${comp_name}:"
    if ! docker-compose --file         "${comp_conf_path}" \
                        --project-name "${project_name}"   up --detach
    then
        exit 1
    fi

    echo
    echo "container composition ${comp_name} complete"
    echo
done


echo 'Docker container composition image run complete'
echo
