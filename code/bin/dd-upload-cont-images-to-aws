#!/usr/bin/env bash

# dd-upload-cont-images-to-aws
#
# upload Docker container images to AWS registry
#
# author  : stefan schablowski
# contact : stefan.schablowski@desmodyne.com
# created : 2018-10-07


# NOTE: see dd-download-cont-comps-from-aws


echo
echo 'upload Docker container images to AWS registry'
echo


# -----------------------------------------------------------------------------
# configure script parameters

# absolute path to BashLib library file
path_to_bashlib='/usr/local/lib/dd-bash-lib.sh'

# array with alphabetical list of tools called by this script
# shellcheck disable=SC2034
req_tools=('aws' 'docker' 'jq' 'yq')

# array with paths to append to PATH
# shellcheck disable=SC2034
ext_paths=()


# -----------------------------------------------------------------------------
# load BashLib

# shellcheck disable=SC1090
if output="$(source "${path_to_bashlib}" 2>&1)"
then
    source "${path_to_bashlib}"
else
    echo "${output}"
    exit 1
fi


# -----------------------------------------------------------------------------
# run BashLib boilerplate functions

if ! configure_platform              ; then exit 1; fi
if ! extend_path req_tools ext_paths ; then exit 1; fi
if ! get_conf_file_arg "${@}"        ; then exit 1; fi


# -----------------------------------------------------------------------------
# load script configuration

echo

# TODO: make use of aws_namespace ?
# shellcheck disable=SC2034
attrs=(aws_def_region aws_namespace aws_profile aws_reg_url
       images local_namespace)
# shellcheck disable=SC2034
opt_attrs=()

echo 'Load script configuration file:'
# shellcheck disable=SC2154
if ! get_attrs_from_yaml_file "${conf_file}" attrs opt_attrs; then exit 1; fi


# -----------------------------------------------------------------------------
# configure script parameters, cont.

# command shortcut for shorter code
# shellcheck disable=SC2154
aws="aws --profile ${aws_profile}"


# -----------------------------------------------------------------------------
# upload Docker container images to AWS registry

echo

echo -n 'Log into AWS: '
# shellcheck disable=SC2154
if output="$(${aws} ecr get-login --no-include-email \
                                  --region "${aws_def_region}" 2>&1)"
then
    echo 'OK'
    login_command="${output}"
else
    echo 'ERROR'
    echo "${output}"
    exit 1
fi

echo -n 'Log into AWS Docker repository: '
if output="$(${login_command} 2>&1)"
then
    echo 'OK'

    if [ -n "${output}" ]
    then
        echo "${output}"
        echo
    fi
else
    echo 'ERROR'
    echo "${output}"
    exit 1
fi

echo -n 'Get existing container image repositories: '
if output="$(${aws} ecr describe-repositories 2>&1)"
then
    echo 'OK'
    repo_json="${output}"
    echo
else
    echo 'ERROR'
    echo "${output}"
    exit 1
fi

if ! existing_repo_uris="$(jq -r '.repositories[].repositoryUri' \
                             <<< "${repo_json}")"
then
    exit 1
fi


# shellcheck disable=SC2154
if ! image_names="$(jq -r 'keys[]' <<< "${images}" | sort)"
then
    exit 1
fi


for image_name in ${image_names}
do
    echo
    echo "container image name: ${image_name}"
    echo

    if ! image_conf="$(jq -r ".\"${image_name}\"" <<< "${images}")"
    then
        exit 1
    fi

    if ! image_tag="$(jq -r '.image_tag' <<< "${image_conf}")"
    then
        exit 1
    fi

    # shellcheck disable=SC2154
    repo_uri="${aws_reg_url}/${aws_namespace}/${image_name}"
    repo_tag="${repo_uri}:${image_tag}"
    # shellcheck disable=SC2154
    local_tag="${local_namespace}/${image_name}:${image_tag}"

    repo_exists=false

    for existing_repo_uri in ${existing_repo_uris}
    do
        if [ "${existing_repo_uri}" = "${repo_uri}" ]
        then
            repo_exists=true
            break
        fi
    done

    if [ "${repo_exists}" = false ]
    then
        echo -n 'Create container image repository: '
        if output="$(${aws} ecr create-repository \
                      --repository-name "${aws_namespace}/${image_name}" 2>&1)"
        then
            echo 'OK'
            echo
        else
            echo 'ERROR'
            echo "${output}"
            exit 1
        fi
    fi

    echo -n 'Tag Docker container image with repository info: '
    if output="$(docker tag "${local_tag}" "${repo_tag}" 2>&1)"
    then
        echo 'OK'
        echo
    else
        echo 'ERROR'
        echo "${output}"
        exit 1
    fi

    echo 'Push Docker container image to repository:'
    if ! docker push "${repo_tag}"
    then
        exit 1
    fi

    echo
    echo 'Remove repository info tag from Docker container:'
    if ! docker rmi "${repo_tag}"
    then
        exit 1
    fi

    echo
    echo "container image ${image_name} upload complete"
    echo
done


echo 'Docker container image upload to AWS registry complete'
echo
